services:
  frontend:
    image: nginx:1.26-alpine3.20
    depends_on:
      - backend
    configs:
      - source: nginx_vhosts
        target: /etc/nginx/conf.d/vhosts.conf
    volumes:
      - ./public:/app/public:ro
      - ./docker/frontend/ssl:/etc/nginx/ssl:ro
    ports:
      - "${DOCKER_NGINX_HTTP_PORT:-80}:80"
      - "${DOCKER_NGINX_HTTPS_PORT:-443}:443"
    networks:
      - frontend
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
      target: php_dev
      args:
        USERNAME: ${DOCKER_USERNAME:-app}
        USER_ID: ${DOCKER_USER_ID:-1000}
        GROUP_ID: ${DOCKER_GROUP_ID:-1000}
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    networks:
      - backend
      - frontend
  db:
    image: postgres:17.2-alpine3.20
    ports:
      - "${DOCKER_POSTGRES_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker/postgres/create-test-database.sql:/docker-entrypoint-initdb.d/10-create-test-database.sql
    env_file:
      - docker/postgres/.env
    networks:
      - backend
  redis:
    image: redis:7.4.1-alpine3.20
    ports:
      - "${DOCKER_REDIS_PORT:-6379}:6379"
    networks:
      - backend
configs:
  nginx_vhosts:
    file: ./docker/frontend/vhosts.conf
volumes:
  db_data: { }
networks:
  frontend: { }
  backend: { }